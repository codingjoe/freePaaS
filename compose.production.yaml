services:
  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.12.0
    hostname: oauth2-proxy
    restart: unless-stopped
    command: --github-user=codingjoe --reverse-proxy=true --provider=github --client-id ${GITHUB_CLIENT_ID} --client-secret ${GITHUB_CLIENT_SECRET} --cookie-secret ${OAUTH2_PROXY_COOKIE_SECRET} --cookie-secure=true --email-domain=* --upstream=http://dozzle:8080 --http-address=http://0.0.0.0:4180 --whitelist-domain=.${HOSTNAME}
    depends_on:
      dozzle:
        condition: service_healthy
    networks:
      - oauth2-proxy
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:v8.14.6
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - oauth2-proxy
      - wan # for gravatar
    environment:
      DOZZLE_AUTH_PROVIDER: forward-proxy
    deploy:
      mode: global
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s
    labels:
      dev.dozzle.group: host
  postgres:
    ports: !reset []
    networks:
      - lan
    labels:
      dev.dozzle.group: db
  redis:
    environment:
      ALLOW_EMPTY_PASSWORD: no
    ports: !reset []
    networks:
      - lan
    labels:
      dev.dozzle.group: db
  web:
    build:
      target: production
      args:
        UV_NO_DEV: 1
    volumes: []
    ports: !reset []
    deploy:
      mode: replicated
      replicas: 2
    networks:
      - lan
    labels:
      dev.dozzle.group: app
    environment:
      GRANIAN_RELOAD: false
  caddy:
    container_name: caddy
    build:
      context: .
      dockerfile: containers/caddy/Containerfile
    restart: unless-stopped
    depends_on:
      web:
        condition: service_started
      oauth2-proxy:
        condition: service_started
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
      - "443:443/udp"
    volumes:
      - caddy:/data
      - caddy:/config
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - lan
      - oauth2-proxy
      - wan
    env_file:
      - .env
    labels:
      dev.dozzle.group: host
    deploy:
      mode: global
volumes:
  postgres:
  redis:
  caddy:
networks:
  oauth2-proxy:
    driver: bridge
    internal: true
  lan:
    driver: bridge
    internal: true
  wan:
    driver: bridge
