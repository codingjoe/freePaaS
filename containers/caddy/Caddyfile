{
	# Configure caddy-security.
	order authenticate before respond
	security {
		oauth identity provider generic {
			delay_start 3
			realm generic
			driver generic
			client_id {$CADDY_AUTH_CLIENT_ID} # Replace with your own client ID
			client_secret {$CADDY_AUTH_CLIENT_SECRET} # Replace with your own client secret
			scopes openid email profile
			base_auth_url https://id.{$HOSTNAME} #Replace
			metadata_url https://id.{$HOSTNAME}/.well-known/openid-configuration #Replace
		}
		authentication portal pocket-id {
			crypto default token lifetime 86400 # Seconds until you have to re-authenticate
			enable identity provider generic
			cookie insecure off # Set to "on" if you're not using HTTPS
			# cookie domain service.example.com - If using multiple clients/portals you have to set the cookie domain for each one so they do not conflict when trying to refresh the session.
			transform user {
				match realm generic
				action add role user
			}
		}
		authorization policy dozzlepolicy {
			set auth url /caddy-security/oauth2/generic
			allow roles user
			inject headers with claims
		}
	}
}

https://{$HOSTNAME} {
	route /* {
		reverse_proxy http://web:8000
	}
}

https://dozzle.{$HOSTNAME} {
	@auth {
		path /caddy-security/*
	}
	route @auth {
		authenticate with pocket-id
	}
	route /* {
		authorize with dozzlepolicy
		reverse_proxy http://dozzle:8080
	}
}

https://id.{$HOSTNAME} {
	route /* {
		reverse_proxy http://pocket-id:1411
	}
}
